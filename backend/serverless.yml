service: sls-node-s3

frameworkVersion: "3"

useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-1

  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: "*"

layers:
  filesize:
    name: ${self:service}-filesize-layer-${self:provider.stage}
    path: ./layers/filesize-layer
    compatibleRuntimes:
      - nodejs18.x

functions:
  createPresignedPost:
    handler: functions/createPresignedPost.handler
    events:
      - http:
          method: post
          path: upload
          cors: true
    environment:
      BUCKET_NAME: !Ref Uploads
  getFilesList:
    handler: functions/getFilesList.handler
    events:
      - http:
          method: get
          path: files
          cors: true
    environment:
      BUCKET_NAME: !Ref Uploads
    layers:
      - !Ref FilesizeLambdaLayer
  downloadFile:
    handler: functions/downloadFile.handler
    events:
      - http:
          method: get
          path: download/{fileKey}
          cors: true
    environment:
      BUCKET_NAME: !Ref Uploads

resources:
  Resources:
    Uploads:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: !Sub ${self:service}-uploads
        AccessControl: Private
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - "*"
              AllowedMethods:
                - GET
                - PUT
                - POST
              AllowedOrigins:
                - "*"
              MaxAge: "3600"
